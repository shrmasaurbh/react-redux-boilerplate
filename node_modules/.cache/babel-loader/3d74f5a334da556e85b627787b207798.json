{"ast":null,"code":"import axios from 'axios';\nimport API from './api';\n\nconst accessToken = () => {\n  if (localStorage.getItem(\"homesfy_lg\")) {\n    return JSON.parse(window.atob(localStorage.getItem(\"homesfy_lg\")));\n  }\n};\n\nconst isTokenValid = (status, message) => {\n  if (status === 400 && message === \"Token Not Found\" || status === 401 && message === \"Authentication error\") {\n    window.localStorage.clear();\n    window.location = \"/\";\n  }\n\n  return true;\n};\n\nconst sendResponse = res => {\n  if (isTokenValid(res.meta.status, res.meta.message)) {\n    return res;\n  }\n};\n\nexport const get = async url => {\n  let headers = new Headers({\n    \"Content-Type\": \"application/json\",\n    Accept: \"*/*\",\n    access_token: accessToken()\n  });\n  var request = new Request(url, {\n    method: \"GET\",\n    headers: headers\n  });\n  return fetch(request).then(stream => stream.json().then(res => {\n    return sendResponse(stream, res);\n  }));\n};\nexport const post = async (url, options) => {\n  console.log(process.env.REACT_APP_CORE_API_URL);\n  console.log(process.env.REACT_APP_URL);\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"bearer \" + accessToken()\n  }; // try{\n\n  let res = await API.post('http://localhost:4000/api/auth/login', options, {\n    headers: headers\n  });\n  console.log(\"res\", res);\n  return sendResponse(res); // } catch (e) {\n  //   console.log('ðŸ˜± Axios request failed: ${e}',e);\n  // }\n};\nexport const put = (url, options) => {\n  options.method = \"PUT\";\n  options.headers = {\n    \"Content-Type\": \"application/json\",\n    Accept: \"*/*\",\n    access_token: accessToken()\n  };\n  return fetch(url, options).then(stream => stream.json().then(res => {\n    return sendResponse(stream, res);\n  }));\n};\nexport const Delete = url => {\n  let headers = new Headers({\n    \"Content-Type\": \"application/json\",\n    Accept: \"*/*\",\n    access_token: accessToken()\n  });\n  var request = new Request(url, {\n    method: \"DELETE\",\n    headers: headers\n  });\n  return fetch(request).then(stream => stream.json().then(res => {\n    return sendResponse(stream, res);\n  }));\n};\nexport const FileUpload = (url, options) => {\n  options.method = \"POST\";\n  options.headers = {\n    Accept: \"*/*\",\n    access_token: accessToken()\n  };\n  return fetch(url, options).then(stream => stream.json().then(res => {\n    return sendResponse(stream, res);\n  }));\n};","map":{"version":3,"sources":["/home/dell/frontends/magnet_frontend_old/src/utils/Methods.js"],"names":["axios","API","accessToken","localStorage","getItem","JSON","parse","window","atob","isTokenValid","status","message","clear","location","sendResponse","res","meta","get","url","headers","Headers","Accept","access_token","request","Request","method","fetch","then","stream","json","post","options","console","log","process","env","REACT_APP_CORE_API_URL","REACT_APP_URL","put","Delete","FileUpload"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport API from './api';\n\nconst accessToken = () => {\n  if (localStorage.getItem(\"homesfy_lg\")) {\n    return JSON.parse(window.atob(localStorage.getItem(\"homesfy_lg\")));\n  }\n};\n\nconst isTokenValid = (status,message) => {\n  if (\n    (status === 400 && message === \"Token Not Found\") ||\n    (status === 401 && message === \"Authentication error\")\n  ) {\n    window.localStorage.clear();\n    window.location = \"/\";\n  }\n\n  return true;\n};\n\nconst sendResponse = (res) => {\n  if (isTokenValid(res.meta.status,res.meta.message)) {\n    return res;\n  }\n};\n\nexport const get = async url => {\n  let headers = new Headers({\n    \"Content-Type\": \"application/json\",\n    Accept: \"*/*\",\n    access_token: accessToken()\n  });\n\n  var request = new Request(url, {\n    method: \"GET\",\n    headers: headers\n  });\n\n  return fetch(request).then(stream =>\n    stream.json().then(res => {\n      return sendResponse(stream, res);\n    })\n  );\n};\n\nexport const post = async (url, options) => {\n  console.log(process.env.REACT_APP_CORE_API_URL);\n  console.log(process.env.REACT_APP_URL);\n  const headers = {\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"bearer \"+accessToken(),\n  };\n\n  // try{\n    let res = await API.post('http://localhost:4000/api/auth/login', options, { headers: headers });\n    console.log(\"res\",res);\n    return sendResponse(res);\n\n  // } catch (e) {\n  //   console.log('ðŸ˜± Axios request failed: ${e}',e);\n  // }\n\n};\n\nexport const put = (url, options) => {\n  options.method = \"PUT\";\n  options.headers = {\n    \"Content-Type\": \"application/json\",\n    Accept: \"*/*\",\n    access_token: accessToken()\n  };\n\n  return fetch(url, options).then(stream =>\n    stream.json().then(res => {\n      return sendResponse(stream, res);\n    })\n  );\n};\n\nexport const Delete = url => {\n  let headers = new Headers({\n    \"Content-Type\": \"application/json\",\n    Accept: \"*/*\",\n    access_token: accessToken()\n  });\n\n  var request = new Request(url, {\n    method: \"DELETE\",\n    headers: headers\n  });\n\n  return fetch(request).then(stream =>\n    stream.json().then(res => {\n      return sendResponse(stream, res);\n    })\n  );\n};\n\nexport const FileUpload = (url, options) => {\n  options.method = \"POST\";\n  options.headers = {\n    Accept: \"*/*\",\n    access_token: accessToken()\n  };\n\n  return fetch(url, options).then(stream =>\n    stream.json().then(res => {\n      return sendResponse(stream, res);\n    })\n  );\n};\n"]},"metadata":{},"sourceType":"module"}